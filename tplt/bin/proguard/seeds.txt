android.support.v4.app.BackStackState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.BaseFragmentActivityDonut: BaseFragmentActivityDonut()
android.support.v4.app.BaseFragmentActivityHoneycomb: BaseFragmentActivityHoneycomb()
android.support.v4.app.Fragment$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.FragmentActivity: FragmentActivity()
android.support.v4.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.FragmentState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.FragmentTabHost: void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener)
android.support.v4.app.FragmentTabHost$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()
android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String)
android.support.v4.media.MediaBrowserCompat$MediaItem: android.os.Parcelable$Creator CREATOR
android.support.v4.media.MediaDescriptionCompat: android.os.Parcelable$Creator CREATOR
android.support.v4.media.MediaMetadataCompat: android.os.Parcelable$Creator CREATOR
android.support.v4.media.RatingCompat: android.os.Parcelable$Creator CREATOR
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.os.Parcelable$Creator CREATOR
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: android.os.Parcelable$Creator CREATOR
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Parcelable$Creator CREATOR
android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR
android.support.v4.media.session.PlaybackStateCompat: android.os.Parcelable$Creator CREATOR
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Parcelable$Creator CREATOR
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
android.support.v4.view.PagerTabStrip: void setTabIndicatorColor(int)
android.support.v4.view.PagerTabStrip: void setTabIndicatorColorResource(int)
android.support.v4.view.PagerTabStrip: int getTabIndicatorColor()
android.support.v4.view.PagerTabStrip: void setTextSpacing(int)
android.support.v4.view.PagerTabStrip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
android.support.v4.view.PagerTabStrip: void setBackgroundColor(int)
android.support.v4.view.PagerTabStrip: void setBackgroundResource(int)
android.support.v4.view.PagerTabStrip: void setDrawFullUnderline(boolean)
android.support.v4.view.PagerTabStrip: boolean getDrawFullUnderline()
android.support.v4.view.PagerTabStrip: int getMinHeight()
android.support.v4.view.PagerTabStrip$1: void onClick(android.view.View)
android.support.v4.view.PagerTabStrip$2: void onClick(android.view.View)
android.support.v4.view.PagerTitleStrip: void setSingleLineAllCaps(android.widget.TextView)
android.support.v4.view.PagerTitleStrip: void setTextSpacing(int)
android.support.v4.view.PagerTitleStrip: int getTextSpacing()
android.support.v4.view.PagerTitleStrip: void setNonPrimaryAlpha(float)
android.support.v4.view.PagerTitleStrip: void setTextColor(int)
android.support.v4.view.PagerTitleStrip: void setGravity(int)
android.support.v4.view.PagerTitleStrip: int getMinHeight()
android.support.v4.view.ViewPager
android.support.v4.view.ViewPager: ViewPager(android.content.Context)
android.support.v4.view.ViewPager: ViewPager(android.content.Context,android.util.AttributeSet)
android.support.v4.view.ViewPager: void setScrollState(int)
android.support.v4.view.ViewPager: void setAdapter(android.support.v4.view.PagerAdapter)
android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()
android.support.v4.view.ViewPager: void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener)
android.support.v4.view.ViewPager: int getClientWidth()
android.support.v4.view.ViewPager: void setCurrentItem(int)
android.support.v4.view.ViewPager: int getCurrentItem()
android.support.v4.view.ViewPager: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
android.support.v4.view.ViewPager: void setChildrenDrawingOrderEnabledCompat(boolean)
android.support.v4.view.ViewPager: int getOffscreenPageLimit()
android.support.v4.view.ViewPager: void setOffscreenPageLimit(int)
android.support.v4.view.ViewPager: void setPageMargin(int)
android.support.v4.view.ViewPager: int getPageMargin()
android.support.v4.view.ViewPager: void setPageMarginDrawable(android.graphics.drawable.Drawable)
android.support.v4.view.ViewPager: void setPageMarginDrawable(int)
android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)
android.support.v4.view.ViewPager$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.widget.DrawerLayout: void setDrawerElevation(float)
android.support.v4.widget.DrawerLayout: float getDrawerElevation()
android.support.v4.widget.DrawerLayout: void setScrimColor(int)
android.support.v4.widget.DrawerLayout: void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener)
android.support.v4.widget.DrawerLayout: void setDrawerLockMode(int)
android.support.v4.widget.DrawerLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
android.support.v4.widget.DrawerLayout: android.graphics.drawable.Drawable getStatusBarBackgroundDrawable()
android.support.v4.widget.DrawerLayout: void setStatusBarBackground(int)
android.support.v4.widget.DrawerLayout: void setStatusBarBackgroundColor(int)
android.support.v4.widget.DrawerLayout$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
android.support.v4.widget.NestedScrollView: int getNestedScrollAxes()
android.support.v4.widget.NestedScrollView: float getTopFadingEdgeStrength()
android.support.v4.widget.NestedScrollView: float getBottomFadingEdgeStrength()
android.support.v4.widget.NestedScrollView: int getMaxScrollAmount()
android.support.v4.widget.NestedScrollView: void setOnScrollChangeListener(android.support.v4.widget.NestedScrollView$OnScrollChangeListener)
android.support.v4.widget.NestedScrollView: void setFillViewport(boolean)
android.support.v4.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
android.support.v4.widget.NestedScrollView: float getVerticalScrollFactorCompat()
android.support.v4.widget.NestedScrollView: int getScrollRange()
android.support.v4.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.widget.SlidingPaneLayout: void setParallaxDistance(int)
android.support.v4.widget.SlidingPaneLayout: int getParallaxDistance()
android.support.v4.widget.SlidingPaneLayout: void setSliderFadeColor(int)
android.support.v4.widget.SlidingPaneLayout: int getSliderFadeColor()
android.support.v4.widget.SlidingPaneLayout: void setCoveredFadeColor(int)
android.support.v4.widget.SlidingPaneLayout: int getCoveredFadeColor()
android.support.v4.widget.SlidingPaneLayout: void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener)
android.support.v4.widget.SlidingPaneLayout: void setShadowDrawable(android.graphics.drawable.Drawable)
android.support.v4.widget.SlidingPaneLayout: void setShadowDrawableLeft(android.graphics.drawable.Drawable)
android.support.v4.widget.SlidingPaneLayout: void setShadowDrawableRight(android.graphics.drawable.Drawable)
android.support.v4.widget.SlidingPaneLayout: void setShadowResource(int)
android.support.v4.widget.SlidingPaneLayout: void setShadowResourceLeft(int)
android.support.v4.widget.SlidingPaneLayout: void setShadowResourceRight(int)
android.support.v4.widget.SlidingPaneLayout$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.widget.SwipeRefreshLayout: void setColorViewAlpha(int)
android.support.v4.widget.SwipeRefreshLayout: void setSize(int)
android.support.v4.widget.SwipeRefreshLayout: void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener)
android.support.v4.widget.SwipeRefreshLayout: void setRefreshing(boolean)
android.support.v4.widget.SwipeRefreshLayout: void setAnimationProgress(float)
android.support.v4.widget.SwipeRefreshLayout: void setProgressBackgroundColor(int)
android.support.v4.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeResource(int)
android.support.v4.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeColor(int)
android.support.v4.widget.SwipeRefreshLayout: void setColorScheme(int[])
android.support.v4.widget.SwipeRefreshLayout: void setColorSchemeResources(int[])
android.support.v4.widget.SwipeRefreshLayout: void setColorSchemeColors(int[])
android.support.v4.widget.SwipeRefreshLayout: void setDistanceToTriggerSync(int)
android.support.v4.widget.SwipeRefreshLayout: int getProgressCircleDiameter()
android.support.v4.widget.SwipeRefreshLayout: int getNestedScrollAxes()
android.support.v4.widget.SwipeRefreshLayout: void setNestedScrollingEnabled(boolean)
com.hanaone.media.AudioControllerView: void setMediaPlayer(com.hanaone.media.AudioControllerView$MediaPlayerControl)
com.hanaone.media.AudioControllerView: void setAnchorView(android.view.ViewGroup)
com.hanaone.media.AudioControllerView: void setEnabled(boolean)
com.hanaone.media.AudioControllerView$1: void onClick(android.view.View)
com.hanaone.media.AudioControllerView$2: void onClick(android.view.View)
com.hanaone.media.AudioControllerView$4: void onClick(android.view.View)
com.hanaone.media.AudioControllerView$5: void onClick(android.view.View)
com.hanaone.tplt.HelpActivity
com.hanaone.tplt.HelpActivity: HelpActivity()
com.hanaone.tplt.HelpActivity: void onClick(android.view.View)
com.hanaone.tplt.MainActivity
com.hanaone.tplt.MainActivity: MainActivity()
com.hanaone.tplt.MainActivity: void onClick(android.view.View)
com.hanaone.tplt.QuestionActivity
com.hanaone.tplt.QuestionActivity: QuestionActivity()
com.hanaone.tplt.QuestionActivity: void onClick(android.view.View)
com.hanaone.tplt.QuestionSlideFragment$1: void onClick(android.view.View)
com.hanaone.tplt.QuestionSlideFragment$2: void onClick(android.view.View)
com.hanaone.tplt.QuestionSlideFragment$3: void onClick(android.view.View)
com.hanaone.tplt.QuestionSlideFragment$4: void onClick(android.view.View)
com.hanaone.tplt.QuestionSlideFragment$5: void onClick(android.view.View)
com.hanaone.tplt.QuestionSlideFragment$6: void onClick(android.view.View)
com.hanaone.tplt.R$anim: int clock_wise
com.hanaone.tplt.R$anim: int fadein
com.hanaone.tplt.R$anim: int fadeout
com.hanaone.tplt.R$attr: int kswAnimationDuration
com.hanaone.tplt.R$attr: int kswBackColor
com.hanaone.tplt.R$attr: int kswBackDrawable
com.hanaone.tplt.R$attr: int kswBackMeasureRatio
com.hanaone.tplt.R$attr: int kswBackRadius
com.hanaone.tplt.R$attr: int kswFadeBack
com.hanaone.tplt.R$attr: int kswThumbColor
com.hanaone.tplt.R$attr: int kswThumbDrawable
com.hanaone.tplt.R$attr: int kswThumbHeight
com.hanaone.tplt.R$attr: int kswThumbMargin
com.hanaone.tplt.R$attr: int kswThumbMarginBottom
com.hanaone.tplt.R$attr: int kswThumbMarginLeft
com.hanaone.tplt.R$attr: int kswThumbMarginRight
com.hanaone.tplt.R$attr: int kswThumbMarginTop
com.hanaone.tplt.R$attr: int kswThumbRadius
com.hanaone.tplt.R$attr: int kswThumbWidth
com.hanaone.tplt.R$attr: int kswTintColor
com.hanaone.tplt.R$color: int BLACK
com.hanaone.tplt.R$color: int BLUE
com.hanaone.tplt.R$color: int CYAN
com.hanaone.tplt.R$color: int CYAN_BRIGHT
com.hanaone.tplt.R$color: int GRAY_HINT
com.hanaone.tplt.R$color: int GRAY_ICON
com.hanaone.tplt.R$color: int GRAY_TITLE
com.hanaone.tplt.R$color: int GRAY_UNDER_BAR
com.hanaone.tplt.R$color: int GREEN
com.hanaone.tplt.R$color: int RED
com.hanaone.tplt.R$color: int WHITE
com.hanaone.tplt.R$color: int WHITE_ALPHA
com.hanaone.tplt.R$color: int ksw_md_back_color
com.hanaone.tplt.R$color: int ksw_md_ripple_checked
com.hanaone.tplt.R$color: int ksw_md_ripple_normal
com.hanaone.tplt.R$color: int ksw_md_solid_checked
com.hanaone.tplt.R$color: int ksw_md_solid_checked_disable
com.hanaone.tplt.R$color: int ksw_md_solid_disable
com.hanaone.tplt.R$color: int ksw_md_solid_normal
com.hanaone.tplt.R$color: int ksw_md_solid_shadow
com.hanaone.tplt.R$dimen: int activity_horizontal_margin
com.hanaone.tplt.R$dimen: int activity_vertical_margin
com.hanaone.tplt.R$dimen: int ksw_md_thumb_ripple_size
com.hanaone.tplt.R$dimen: int ksw_md_thumb_shadow_inset
com.hanaone.tplt.R$dimen: int ksw_md_thumb_shadow_inset_bottom
com.hanaone.tplt.R$dimen: int ksw_md_thumb_shadow_inset_top
com.hanaone.tplt.R$dimen: int ksw_md_thumb_shadow_offset
com.hanaone.tplt.R$dimen: int ksw_md_thumb_shadow_size
com.hanaone.tplt.R$dimen: int ksw_md_thumb_solid_inset
com.hanaone.tplt.R$dimen: int ksw_md_thumb_solid_size
com.hanaone.tplt.R$drawable: int btn_save
com.hanaone.tplt.R$drawable: int hint_cyan
com.hanaone.tplt.R$drawable: int hint_txt_border
com.hanaone.tplt.R$drawable: int ic_home_black_24dp
com.hanaone.tplt.R$drawable: int ic_keyboard_arrow_down_black_24dp
com.hanaone.tplt.R$drawable: int ic_keyboard_arrow_left_black_24dp
com.hanaone.tplt.R$drawable: int ic_keyboard_arrow_left_cyan_24dp
com.hanaone.tplt.R$drawable: int ic_keyboard_arrow_right_black_24dp
com.hanaone.tplt.R$drawable: int ic_keyboard_arrow_up_black_24dp
com.hanaone.tplt.R$drawable: int ic_launcher
com.hanaone.tplt.R$drawable: int ic_media_fullscreen_shrink
com.hanaone.tplt.R$drawable: int ic_media_fullscreen_stretch
com.hanaone.tplt.R$drawable: int ic_media_pause
com.hanaone.tplt.R$drawable: int ic_media_play
com.hanaone.tplt.R$drawable: int ic_pause_circle_filled_black_18dp
com.hanaone.tplt.R$drawable: int ic_pause_circle_filled_black_24dp
com.hanaone.tplt.R$drawable: int ic_play_circle_filled_black_24dp
com.hanaone.tplt.R$drawable: int ic_reorder_black_24dp
com.hanaone.tplt.R$drawable: int ic_star_rate_black_18dp
com.hanaone.tplt.R$drawable: int ic_sync_black_24dp
com.hanaone.tplt.R$drawable: int ic_wb_sunny_black_24dp
com.hanaone.tplt.R$drawable: int item_icon
com.hanaone.tplt.R$drawable: int ksw_md_thumb
com.hanaone.tplt.R$drawable: int new_lesson
com.hanaone.tplt.R$drawable: int num_1
com.hanaone.tplt.R$drawable: int num_2
com.hanaone.tplt.R$drawable: int num_3
com.hanaone.tplt.R$drawable: int num_4
com.hanaone.tplt.R$drawable: int num_black
com.hanaone.tplt.R$drawable: int num_green
com.hanaone.tplt.R$drawable: int num_red
com.hanaone.tplt.R$drawable: int num_trans
com.hanaone.tplt.R$drawable: int progressbar
com.hanaone.tplt.R$drawable: int sample_test
com.hanaone.tplt.R$drawable: int shadow_above
com.hanaone.tplt.R$drawable: int shadow_below
com.hanaone.tplt.R$id: int btn_down
com.hanaone.tplt.R$id: int btn_home
com.hanaone.tplt.R$id: int btn_next
com.hanaone.tplt.R$id: int btn_previous
com.hanaone.tplt.R$id: int btn_question_choice_1
com.hanaone.tplt.R$id: int btn_question_choice_2
com.hanaone.tplt.R$id: int btn_question_choice_3
com.hanaone.tplt.R$id: int btn_question_choice_4
com.hanaone.tplt.R$id: int btn_question_hint
com.hanaone.tplt.R$id: int btn_rate
com.hanaone.tplt.R$id: int btn_result
com.hanaone.tplt.R$id: int btn_result_number
com.hanaone.tplt.R$id: int btn_result_review
com.hanaone.tplt.R$id: int btn_sample_test
com.hanaone.tplt.R$id: int btn_section_hint
com.hanaone.tplt.R$id: int btn_selection_exam
com.hanaone.tplt.R$id: int btn_selection_practice
com.hanaone.tplt.R$id: int btn_selection_sample_beginner
com.hanaone.tplt.R$id: int btn_selection_sample_intermediate
com.hanaone.tplt.R$id: int btn_setting
com.hanaone.tplt.R$id: int btn_submit
com.hanaone.tplt.R$id: int ffwd
com.hanaone.tplt.R$id: int fullscreen
com.hanaone.tplt.R$id: int img_new_lesson_1
com.hanaone.tplt.R$id: int img_new_lesson_2
com.hanaone.tplt.R$id: int img_new_lesson_3
com.hanaone.tplt.R$id: int img_question
com.hanaone.tplt.R$id: int img_question_choice_1
com.hanaone.tplt.R$id: int img_question_choice_2
com.hanaone.tplt.R$id: int img_question_choice_3
com.hanaone.tplt.R$id: int img_question_choice_4
com.hanaone.tplt.R$id: int img_sync
com.hanaone.tplt.R$id: int layout_audio
com.hanaone.tplt.R$id: int layout_bot
com.hanaone.tplt.R$id: int layout_exam
com.hanaone.tplt.R$id: int layout_icon_1
com.hanaone.tplt.R$id: int layout_icon_2
com.hanaone.tplt.R$id: int layout_icon_3
com.hanaone.tplt.R$id: int layout_level1
com.hanaone.tplt.R$id: int layout_level2
com.hanaone.tplt.R$id: int layout_level3
com.hanaone.tplt.R$id: int layout_question_bot
com.hanaone.tplt.R$id: int layout_question_hint
com.hanaone.tplt.R$id: int layout_question_top
com.hanaone.tplt.R$id: int layout_questions
com.hanaone.tplt.R$id: int layout_sample_test
com.hanaone.tplt.R$id: int layout_sections
com.hanaone.tplt.R$id: int layout_sync
com.hanaone.tplt.R$id: int layout_top
com.hanaone.tplt.R$id: int layout_top_under
com.hanaone.tplt.R$id: int list_exam
com.hanaone.tplt.R$id: int list_sections
com.hanaone.tplt.R$id: int lv_result
com.hanaone.tplt.R$id: int mediacontroller_progress
com.hanaone.tplt.R$id: int next
com.hanaone.tplt.R$id: int pause
com.hanaone.tplt.R$id: int prev
com.hanaone.tplt.R$id: int prg_download
com.hanaone.tplt.R$id: int prg_level_1
com.hanaone.tplt.R$id: int prg_level_2
com.hanaone.tplt.R$id: int prg_level_3
com.hanaone.tplt.R$id: int rew
com.hanaone.tplt.R$id: int sw_help_audio
com.hanaone.tplt.R$id: int sw_help_hint
com.hanaone.tplt.R$id: int sw_help_target
com.hanaone.tplt.R$id: int time
com.hanaone.tplt.R$id: int time_current
com.hanaone.tplt.R$id: int txt_download_percent
com.hanaone.tplt.R$id: int txt_label_1
com.hanaone.tplt.R$id: int txt_label_2
com.hanaone.tplt.R$id: int txt_label_3
com.hanaone.tplt.R$id: int txt_question_choice_1
com.hanaone.tplt.R$id: int txt_question_choice_2
com.hanaone.tplt.R$id: int txt_question_choice_3
com.hanaone.tplt.R$id: int txt_question_choice_4
com.hanaone.tplt.R$id: int txt_question_hint
com.hanaone.tplt.R$id: int txt_question_number
com.hanaone.tplt.R$id: int txt_question_txt
com.hanaone.tplt.R$id: int txt_result_choice
com.hanaone.tplt.R$id: int txt_result_grade
com.hanaone.tplt.R$id: int txt_result_right
com.hanaone.tplt.R$id: int txt_result_score
com.hanaone.tplt.R$id: int txt_result_total
com.hanaone.tplt.R$id: int txt_score_1
com.hanaone.tplt.R$id: int txt_score_2
com.hanaone.tplt.R$id: int txt_score_3
com.hanaone.tplt.R$id: int txt_section_hint
com.hanaone.tplt.R$id: int txt_section_question
com.hanaone.tplt.R$id: int txt_selection_exam_name
com.hanaone.tplt.R$id: int txt_selection_sample_name
com.hanaone.tplt.R$id: int txt_title
com.hanaone.tplt.R$id: int viewpager_question_vp
com.hanaone.tplt.R$layout: int activity_help
com.hanaone.tplt.R$layout: int activity_main
com.hanaone.tplt.R$layout: int activity_question_practice
com.hanaone.tplt.R$layout: int activity_result
com.hanaone.tplt.R$layout: int activity_selection
com.hanaone.tplt.R$layout: int dialog_download
com.hanaone.tplt.R$layout: int layout_exam
com.hanaone.tplt.R$layout: int layout_question_fragment
com.hanaone.tplt.R$layout: int layout_question_question
com.hanaone.tplt.R$layout: int layout_question_section
com.hanaone.tplt.R$layout: int layout_result
com.hanaone.tplt.R$layout: int media_controller
com.hanaone.tplt.R$string: int action_settings
com.hanaone.tplt.R$string: int app_name
com.hanaone.tplt.R$string: int description
com.hanaone.tplt.R$string: int dialog_ask_download
com.hanaone.tplt.R$string: int dialog_ask_downloading
com.hanaone.tplt.R$string: int dialog_ask_queued
com.hanaone.tplt.R$string: int dialog_caution
com.hanaone.tplt.R$string: int dialog_no
com.hanaone.tplt.R$string: int dialog_yes
com.hanaone.tplt.R$string: int hello_world
com.hanaone.tplt.R$string: int selection_sample
com.hanaone.tplt.R$string: int setting_auto
com.hanaone.tplt.R$string: int setting_manual
com.hanaone.tplt.R$string: int setting_message
com.hanaone.tplt.R$string: int setting_play_audio
com.hanaone.tplt.R$string: int setting_rate
com.hanaone.tplt.R$string: int title_home
com.hanaone.tplt.R$string: int title_name
com.hanaone.tplt.R$string: int title_result
com.hanaone.tplt.R$string: int title_setting
com.hanaone.tplt.R$style: int StyleTitleText
com.hanaone.tplt.R$style: int SwitchButtonMD
com.hanaone.tplt.R$style: int SwitchButtonStyle
com.hanaone.tplt.R$style: int SwitchButtonStyleMD
com.hanaone.tplt.R$styleable: int[] SwitchButton
com.hanaone.tplt.R$styleable: int SwitchButton_kswAnimationDuration
com.hanaone.tplt.R$styleable: int SwitchButton_kswBackColor
com.hanaone.tplt.R$styleable: int SwitchButton_kswBackDrawable
com.hanaone.tplt.R$styleable: int SwitchButton_kswBackMeasureRatio
com.hanaone.tplt.R$styleable: int SwitchButton_kswBackRadius
com.hanaone.tplt.R$styleable: int SwitchButton_kswFadeBack
com.hanaone.tplt.R$styleable: int SwitchButton_kswThumbColor
com.hanaone.tplt.R$styleable: int SwitchButton_kswThumbDrawable
com.hanaone.tplt.R$styleable: int SwitchButton_kswThumbHeight
com.hanaone.tplt.R$styleable: int SwitchButton_kswThumbMargin
com.hanaone.tplt.R$styleable: int SwitchButton_kswThumbMarginBottom
com.hanaone.tplt.R$styleable: int SwitchButton_kswThumbMarginLeft
com.hanaone.tplt.R$styleable: int SwitchButton_kswThumbMarginRight
com.hanaone.tplt.R$styleable: int SwitchButton_kswThumbMarginTop
com.hanaone.tplt.R$styleable: int SwitchButton_kswThumbRadius
com.hanaone.tplt.R$styleable: int SwitchButton_kswThumbWidth
com.hanaone.tplt.R$styleable: int SwitchButton_kswTintColor
com.hanaone.tplt.ResultActivity
com.hanaone.tplt.ResultActivity: ResultActivity()
com.hanaone.tplt.ResultActivity: void onClick(android.view.View)
com.hanaone.tplt.SelectionActivity
com.hanaone.tplt.SelectionActivity: SelectionActivity()
com.hanaone.tplt.SelectionActivity: void onClick(android.view.View)
com.hanaone.tplt.adapter.ListExamAdapter$2: void onClick(android.view.View)
com.hanaone.tplt.adapter.ListExamAdapter$3: void onClick(android.view.View)
com.hanaone.tplt.adapter.ListExamAdapter$4: void onClick(android.view.View)
com.hanaone.tplt.adapter.ListExamAdapter$5: void onClick(android.view.View)
com.hanaone.tplt.adapter.ListExamAdapter$6: void onClick(android.content.DialogInterface,int)
com.hanaone.tplt.adapter.ListExamAdapter$7: void onClick(android.content.DialogInterface,int)
com.hanaone.tplt.adapter.ListResultAdapter$1: void onClick(android.view.View)
com.hanaone.tplt.adapter.ListSectionAdapter$1: void onClick(android.view.View)
com.hanaone.tplt.adapter.ListSectionAdapter$2: void onClick(android.view.View)
com.hanaone.tplt.adapter.ListSectionAdapter$3: void onClick(android.view.View)
com.hanaone.tplt.adapter.ListSectionAdapter$4: void onClick(android.view.View)
com.hanaone.tplt.adapter.ListSectionAdapter$5: void onClick(android.view.View)
com.hanaone.tplt.adapter.ListSectionAdapter$6: void onClick(android.view.View)
com.hanaone.tplt.db.ChoiceDataSet: android.os.Parcelable$Creator CREATOR
com.hanaone.tplt.db.ExamDataSet: android.os.Parcelable$Creator CREATOR
com.hanaone.tplt.db.FileDataSet: android.os.Parcelable$Creator CREATOR
com.hanaone.tplt.db.LevelDataSet: android.os.Parcelable$Creator CREATOR
com.hanaone.tplt.db.QuestionDataSet: android.os.Parcelable$Creator CREATOR
com.hanaone.tplt.db.ResultDataSet: android.os.Parcelable$Creator CREATOR
com.hanaone.tplt.db.SectionDataSet: android.os.Parcelable$Creator CREATOR
com.kyleduo.switchbutton.SwitchButton
com.kyleduo.switchbutton.SwitchButton: SwitchButton(android.content.Context,android.util.AttributeSet,int)
com.kyleduo.switchbutton.SwitchButton: SwitchButton(android.content.Context,android.util.AttributeSet)
com.kyleduo.switchbutton.SwitchButton: SwitchButton(android.content.Context)
com.kyleduo.switchbutton.SwitchButton: boolean getStatusBasedOnPos()
com.kyleduo.switchbutton.SwitchButton: float getProcess()
com.kyleduo.switchbutton.SwitchButton: void setProcess(float)
com.kyleduo.switchbutton.SwitchButton: void setChecked(boolean)
com.kyleduo.switchbutton.SwitchButton: void setCheckedImmediately(boolean)
com.kyleduo.switchbutton.SwitchButton: void setDrawableState(android.graphics.drawable.Drawable)
com.kyleduo.switchbutton.SwitchButton: void setDrawDebugRect(boolean)
com.kyleduo.switchbutton.SwitchButton: long getAnimationDuration()
com.kyleduo.switchbutton.SwitchButton: void setAnimationDuration(long)
com.kyleduo.switchbutton.SwitchButton: android.graphics.drawable.Drawable getThumbDrawable()
com.kyleduo.switchbutton.SwitchButton: void setThumbDrawable(android.graphics.drawable.Drawable)
com.kyleduo.switchbutton.SwitchButton: void setThumbDrawableRes(int)
com.kyleduo.switchbutton.SwitchButton: android.graphics.drawable.Drawable getBackDrawable()
com.kyleduo.switchbutton.SwitchButton: void setBackDrawable(android.graphics.drawable.Drawable)
com.kyleduo.switchbutton.SwitchButton: void setBackDrawableRes(int)
com.kyleduo.switchbutton.SwitchButton: android.content.res.ColorStateList getBackColor()
com.kyleduo.switchbutton.SwitchButton: void setBackColor(android.content.res.ColorStateList)
com.kyleduo.switchbutton.SwitchButton: void setBackColorRes(int)
com.kyleduo.switchbutton.SwitchButton: android.content.res.ColorStateList getThumbColor()
com.kyleduo.switchbutton.SwitchButton: void setThumbColor(android.content.res.ColorStateList)
com.kyleduo.switchbutton.SwitchButton: void setThumbColorRes(int)
com.kyleduo.switchbutton.SwitchButton: float getBackMeasureRatio()
com.kyleduo.switchbutton.SwitchButton: void setBackMeasureRatio(float)
com.kyleduo.switchbutton.SwitchButton: android.graphics.RectF getThumbMargin()
com.kyleduo.switchbutton.SwitchButton: void setThumbMargin(android.graphics.RectF)
com.kyleduo.switchbutton.SwitchButton: float getThumbWidth()
com.kyleduo.switchbutton.SwitchButton: float getThumbHeight()
com.kyleduo.switchbutton.SwitchButton: void setThumbSize(android.graphics.PointF)
com.kyleduo.switchbutton.SwitchButton: android.graphics.PointF getThumbSizeF()
com.kyleduo.switchbutton.SwitchButton: float getThumbRadius()
com.kyleduo.switchbutton.SwitchButton: void setThumbRadius(float)
com.kyleduo.switchbutton.SwitchButton: android.graphics.PointF getBackSizeF()
com.kyleduo.switchbutton.SwitchButton: float getBackRadius()
com.kyleduo.switchbutton.SwitchButton: void setBackRadius(float)
com.kyleduo.switchbutton.SwitchButton: void setFadeBack(boolean)
com.kyleduo.switchbutton.SwitchButton: int getTintColor()
com.kyleduo.switchbutton.SwitchButton: void setTintColor(int)
org.jsoup.Connection$Method: org.jsoup.Connection$Method[] values()
org.jsoup.Connection$Method: org.jsoup.Connection$Method valueOf(java.lang.String)
org.jsoup.nodes.Document$OutputSettings$Syntax: org.jsoup.nodes.Document$OutputSettings$Syntax[] values()
org.jsoup.nodes.Document$OutputSettings$Syntax: org.jsoup.nodes.Document$OutputSettings$Syntax valueOf(java.lang.String)
org.jsoup.nodes.Document$QuirksMode: org.jsoup.nodes.Document$QuirksMode[] values()
org.jsoup.nodes.Document$QuirksMode: org.jsoup.nodes.Document$QuirksMode valueOf(java.lang.String)
org.jsoup.nodes.Entities$CoreCharset: org.jsoup.nodes.Entities$CoreCharset[] values()
org.jsoup.nodes.Entities$CoreCharset: org.jsoup.nodes.Entities$CoreCharset valueOf(java.lang.String)
org.jsoup.nodes.Entities$EscapeMode: org.jsoup.nodes.Entities$EscapeMode[] values()
org.jsoup.nodes.Entities$EscapeMode: org.jsoup.nodes.Entities$EscapeMode valueOf(java.lang.String)
org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState[] values()
org.jsoup.parser.HtmlTreeBuilderState: org.jsoup.parser.HtmlTreeBuilderState valueOf(java.lang.String)
org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType[] values()
org.jsoup.parser.Token$TokenType: org.jsoup.parser.Token$TokenType valueOf(java.lang.String)
org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState[] values()
org.jsoup.parser.TokeniserState: org.jsoup.parser.TokeniserState valueOf(java.lang.String)
